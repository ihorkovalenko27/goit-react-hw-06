{"version":3,"sources":["components/contactsList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","redux/phonebook-actions.js","components/dataBase/baseContacts.js","redux/phonebook-reducer.js","redux/store.js","components/section/Section.js","redux/phonebook-selectors.js","components/contactForm/ContactForm.js","components/contactsList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","defaultContacts","localContact","JSON","parse","window","localStorage","getItem","items","createReducer","state","filter","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","Section","title","children","getItems","getFilter","getFilteredContacts","normalizedContacts","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","alert","type","onChange","pattern","required","ContactList","map","btn","onClick","handleDeleteContacts","Filter","input","e","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4e1a1a77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3GgAc\",\"filter\":\"ContactList_filter__13fcv\",\"btn\":\"ContactList_btn__2npRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ZpX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__zy0Cp\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addNewContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filterContacts = createAction('contacts/filterContacts');\n\nexport { addNewContact, deleteContact, filterContacts };\n","const defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default defaultContacts;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addNewContact, deleteContact, filterContacts } from './phonebook-actions';\nimport defaultContacts from '../components/dataBase/baseContacts';\n\nconst localContact = JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts;\n\nconst items = createReducer(localContact, {\n  [addNewContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './phonebook-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <section>\n        {title && <h1>{title}</h1>}\n        {children}\n      </section>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n  const normalizedContacts = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContacts),\n  );\n  return filteredContacts;\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems } from '../../redux/phonebook-selectors';\nimport { addNewContact } from '../../redux/phonebook-actions';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addNewContact(name, number));\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const revisionContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (revisionContact) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport { deleteContact } from '../../redux/phonebook-actions';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDeleteContacts = id => dispatch(deleteContact(id));\n  return (\n    <>\n      <h2>Contacts</h2>\n      <ul className={s.contacts}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <span>{name}:</span> <span>{number}</span>\n            <button className={s.btn} type=\"button\" onClick={() => handleDeleteContacts(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook-selectors';\nimport { filterContacts } from '../../redux/phonebook-actions';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(filterContacts(e.currentTarget.value));\n  return (\n    <label>\n      Filter contacts by name{' '}\n      <input className={s.input} type=\"text\" value={value} onChange={handleChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactsList/ContactList';\nimport Filter from './components/filter/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Загружаю...</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}